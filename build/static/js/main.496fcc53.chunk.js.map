{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Option","current","label","onClick","className","temps","tempScore","transScore","calcScore","isChangeDay","isCar","isTemp","score","calcScoreColor","logResults","improve","impact","comments","xhr","XMLHttpRequest","addEventListener","console","log","responseText","open","setRequestHeader","send","encodeURI","App","useState","step","setStep","setIsChangeDay","setIsCar","setIsTemp","improveText","setImproveText","impactText","setImpactText","commentText","setCommentText","scoreColor","reset","titles","recycleProps","carProps","disabled","content","style","left","color","toLowerCase","src","type","onChange","e","target","value","marginTop","href","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.496fcc53.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction Option({ current, label, onClick }) {\n  return (\n    <button\n      className={current === label ? \"SelectedOption\" : \"Option\"}\n      onClick={() => onClick(label)}\n    >\n      {label}\n    </button>\n  );\n}\n\nconst temps = [\n  60,\n  62.5,\n  65,\n  67.5,\n  70,\n  72.5,\n  75,\n  77.5,\n  80\n];\n\nconst tempScore = [\n  8,\n  7,\n  6,\n  5,\n  4,\n  3,\n  2,\n  1,\n  0,\n];\n\nconst transScore = {\n  'Gas Car': 3,\n  'Hybrid Car': 2,\n  'EV': 1,\n  'Bus/Trax/Train': 1,\n  'Walk/Bike': 0,\n  'Carpool': 2\n};\n\n// Question 1: Gas car (3 points), Hybrid (2 points), Electric vehicle (1 point), Bus/Trax/Train (1 point), Walk/Bike (0), Carpool (2 points)\n// Question 2: Yes (0 points) and No (1 point)\n// Question 3: Temperature bar - 60 (8 points), 62.5 (7 points), 65 (6 points), 67.5 (5 points), 70 (4 points), and so on up to 80 at 0 points.\n// Final tally for \"Results\" page: Red polluter (10 to 12 points), Orange polluter (7 to 9 points), Yellow polluter (4 to 6 points), Green polluter (1 to 3 points)\n\nconst calcScore = (isChangeDay, isCar, isTemp) => {\n  let score = transScore[isCar] + tempScore[isTemp];\n  if (!isChangeDay) { score++; }\n  return score;\n};\n\nconst calcScoreColor = (score) => {\n  if (score >= 10) { return 'Red'; }\n  if (score >= 7) { return 'Orange'; }\n  if (score >= 4) { return 'Yellow'; }\n  return 'Green';\n};\n\n\nfunction logResults(isChangeDay, isCar, isTemp, improve, impact, comments) {\n  const score = calcScore(isChangeDay, isCar, isTemp);\n  const xhr = new XMLHttpRequest()\n\n  xhr.addEventListener('load', () => {\n    console.log(xhr.responseText);\n  })\n  xhr.open('POST', 'https://script.google.com/macros/s/AKfycbyvS4kztXH7GqNsP_kck4pe2kPqEKBasziAhBIVRvYGkbs-mAdp/exec');\n  xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n  xhr.send(`changeDay=${isChangeDay}&transportation=${isCar}&summerTemp=${temps[isTemp]}&score=${score}&improvements=${encodeURI(improve)}&impact=${encodeURI(impact)}&comments=${encodeURI(comments)}`);\n}\n\nfunction App() {\n\n  const [step, setStep] = useState(0);\n  const [isChangeDay, setIsChangeDay] = useState(0);\n  const [isCar, setIsCar] = useState(0);\n  const [isTemp, setIsTemp] = useState(4);\n\n  const [improveText, setImproveText] = useState('');\n  const [impactText, setImpactText] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n\n  const score = calcScore(isChangeDay, isCar, isTemp);\n  const scoreColor = calcScoreColor(score);\n\n  const reset = (comments) => {\n    if (comments) {\n      logResults(isChangeDay, isCar, isTemp, improveText, impactText, commentText);\n    } else {\n      logResults(isChangeDay, isCar, isTemp, '', '', '');\n    }\n    setStep(0);\n    setIsCar(0);\n    setIsChangeDay(0);\n    setIsTemp(4);\n    setImproveText('');\n    setImpactText('');\n    setCommentText('');\n  };\n\n  const titles = [\n    <span>What type of<br />polluter are you?</span>,\n    <span>How do you get around?</span>,\n    <span>Do you move to less polluting forms of transportation on bad air quality days?</span>,\n    <span>In warmer months, what temperature do you set your household thermostat to?<br/></span>,\n    <span>Results:</span>,\n    <span>Explore</span>,\n    <span>Transit/Home</span>,\n    <span>Health</span>,\n    <span>Pollutants</span>,\n    <span>Air Quality Index</span>,\n    <span>Feedback</span>\n  ];\n\n  const recycleProps = { current: isChangeDay, onClick: setIsChangeDay };\n  const carProps = { current: isCar, onClick: setIsCar };\n\n  const disabled = [\n    false,\n    !isCar,\n    !isChangeDay\n  ]\n\n  const circlePos = [\n    130,\n    212,\n    295,\n    377,\n    460,\n    542,\n    625,\n    707,\n    790\n  ];\n\n  const content = [\n    <div className=\"QuestionB\">How do you contribute to air pollution<br />in your community?</div>,\n    <div className=\"OptionBlock\">\n      <div className=\"OptionCol\">\n        <Option label=\"Gas Car\" {...carProps} />\n        <Option label=\"Hybrid Car\" {...carProps} />\n        <Option label=\"EV\" {...carProps} />\n      </div>\n      <div className=\"OptionCol\">\n        <Option label=\"Bus/Trax/Train\" {...carProps} />\n        <Option label=\"Walk/Bike\" {...carProps} />\n        <Option label=\"Carpool\" {...carProps} />\n      </div>\n    </div>,\n    <div className=\"OptionCol\">\n      <Option label=\"Yes\" {...recycleProps} />\n      <Option label=\"No\" {...recycleProps} />\n    </div>,\n    <div className=\"TempArea\">\n      <div className=\"TempBar\">\n        <div className=\"BarLeft\" onClick={() => setIsTemp(0)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(1)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(2)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(3)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(4)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(5)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(6)} />\n        <div className=\"BarCenter\" onClick={() => setIsTemp(7)} />\n        <div className=\"BarRight\" onClick={() => setIsTemp(8)} />\n      </div>\n      <div className=\"TempText\">\n        <div>60° F</div>\n        <div className=\"TempTextGap\" />\n        <div>80° F</div>\n      </div>\n      <div className=\"TempCircle\" style={{ left: circlePos[isTemp] }}>\n        <div className=\"TempCircleOuter\" />\n        <div className=\"TempCircleInner\" />\n        <div className=\"TempCurrent\">{temps[isTemp]}° F</div>\n      </div>\n    </div>,\n    <div className=\"Results\">\n      <div className=\"ResultLine\">You are a <span style={{ color: scoreColor.toLowerCase() }}>{scoreColor}</span> polluter. ({score} Points)</div>\n      <button\n        className=\"ExploreLink\"\n        onClick={() => setStep(5)}\n      >\n        Explore ways to decrease your day-to-<br />day carbon emissions.\n      </button>\n    </div>,\n    <div className=\"Explore\">\n      <div className=\"ExploreCol\">\n        <div className=\"ExploreImage\">\n          <img src=\"./cars.png\" />\n        </div>\n        <button\n          className=\"ExploreLinkSmall\"\n          onClick={() => setStep(6)}\n        >\n          Transit/Home\n        </button>\n      </div>\n      <div className=\"ExploreCol\">\n        <div className=\"ExploreImage\">\n          <img src=\"./health.png\" />\n        </div>\n        <button\n          className=\"ExploreLinkSmall\"\n          onClick={() => setStep(7)}\n        >\n          Health\n        </button>\n      </div>\n      <div className=\"ExploreCol\">\n        <div className=\"ExploreImage\">\n          <img src=\"./pollution.png\" />\n        </div>\n        <button\n          className=\"ExploreLinkSmall\"\n          onClick={() => setStep(8)}\n        >\n          Pollutants\n        </button>\n      </div>\n    </div>,\n    <div className=\"Subject\">\n      <div className=\"SubjectImage\">\n        <img src=\"./cars.png\" />\n      </div>\n      <div className=\"SubjectBody\">\n        Mobile sources such as vehicles, trains, and planes create half of the PM2.5 (the main pollutant) in a Utah inversion event.\n        <br/><br/>\n        Area sources like businesses and homes are the second leading sources of air pollutant.\n        <br/><br/>\n        <b>Ways you can help clear the air:</b><br />\n        • Take public transport<br />\n        • Walk or ride your bike<br />\n        • Limit idling<br />\n        • Set thermostat to 78° in the summer<br />\n        &nbsp;&nbsp;&nbsp;&nbsp;and 68° in the winter\n      </div>\n      <div className=\"SubjectLinks\">\n        <div className=\"SubjectExplore\">Explore</div>\n        <div>\n          <button\n            className=\"ExploreLinkSmall\"\n            onClick={() => setStep(7)}\n          >\n            Health\n          </button>\n          <button\n            className=\"ExploreLinkSmall\"\n            onClick={() => setStep(8)}\n          >\n            Pollutants\n          </button>\n        </div>\n      </div>\n    </div>,\n    <div className=\"Subject\">\n      <div className=\"SubjectImage\">\n        <img src=\"./health.png\" />\n      </div>\n      <div className=\"SubjectBody\">\n        PM2.5 and ground level ozone can both cause respiratory issues through inhalation, espectially in the most at risk such as children, the elderly, those who have asthma or other lung related conditions. However, event healthy individuals can be affected from high levels of air pollution.\n        <br/><br/>\n        The Air Quality Index is a tool used to report local air quilify and how it might impact your health that day.\n        <br/><br/>\n        <button\n          className=\"AirQualityLink\"\n          onClick={() => setStep(9)}\n        >\n          View Air Quality Index\n        </button>\n      </div>\n      <div className=\"SubjectLinks\">\n        <div className=\"SubjectExplore\">Explore</div>\n        <div>\n          <button\n            className=\"ExploreLinkSmall\"\n            onClick={() => setStep(6)}\n          >\n            Transit/Home\n          </button>\n          <button\n            className=\"ExploreLinkSmall\"\n            onClick={() => setStep(8)}\n          >\n            Pollutants\n          </button>\n        </div>\n      </div>\n    </div>,\n    <div className=\"Subject\">\n      <div className=\"SubjectImage\">\n        <img src=\"./pollution.png\" />\n      </div>\n      <div className=\"SubjectBody\">\n        Particulate matter and ground level ozone are the main pollutants in an inversion event.\n        <br/><br/>\n        Particulate matter, or PM2.5, (the main component of Utah's air pollution) is a mixture of microscopic dust/soot particles.\n        <br/><br/>\n        Ozone, or O3, is formed when sunlight and heat break apart hydrocarbons and nitrogen oxides and they recombine into new structures.\n      </div>\n      <div className=\"SubjectLinks\">\n        <div className=\"SubjectExplore\">Explore</div>\n        <div>\n          <button\n            className=\"ExploreLinkSmall\"\n            onClick={() => setStep(6)}\n          >\n            Transit/Home\n          </button>\n          <button\n            className=\"ExploreLinkSmall\"\n            onClick={() => setStep(7)}\n          >\n            Health\n          </button>\n        </div>\n      </div>\n    </div>,\n    <table className=\"airQTable\">\n      <tr>\n        <td className=\"airQColHead\">Good</td>\n        <td>0-50</td>\n        <td>AQ satisfactory, poses little to no risk</td>\n      </tr>\n      <tr>\n        <td className=\"airQColHead\">Moderate</td>\n        <td>51-100</td>\n        <td>Acceptable, moderate concern for few unusually sensitive to air pollution.</td>\n      </tr>\n      <tr>\n        <td className=\"airQColHead\">Unhealthy for<br />sensitive groups</td>\n        <td>101-150</td>\n        <td>Sensitive groups may be affected.<br />General public not likely affected.</td>\n      </tr>\n      <tr>\n        <td className=\"airQColHead\">Unhealthy</td>\n        <td>0-50</td>\n        <td>Everyone may begin to experience health effects.</td>\n      </tr>\n      <tr>\n        <td className=\"airQColHead\">Very Unhealthy</td>\n        <td>0-50</td>\n        <td>All may experience more serious health effects, sensitive groups more at risk.</td>\n      </tr>\n      <tr>\n        <td className=\"airQColHead\">Hazardous</td>\n        <td>0-50</td>\n        <td>Emergency conditions, entire population more likely to be affected.</td>\n      </tr>\n    </table>,\n    <div className=\"SurveyBody\">\n      We would love your feedback on our project so we can help improve the experience in the future.\n      <br /><br />\n      How could the app's functionailty be improved?\n      <br />\n      <input\n        type=\"text\"\n        className=\"SurveyText\"\n        onChange={e => setImproveText(e.target.value)}\n        value={improveText}\n      />\n      <br />\n      How does this impact your view on air quality?\n      <br />\n      <input\n        type=\"text\"\n        className=\"SurveyText\"\n        onChange={e => setImpactText(e.target.value)}\n        value={impactText}\n      />\n      <br />\n      Commends\n      <br />\n      <input\n        type=\"text\"\n        className=\"SurveyText\"\n        onChange={e => setCommentText(e.target.value)}\n        value={commentText}\n      />\n      <br />\n    </div>\n  ];\n\n  return (\n    <div className=\"App\">\n      <div className=\"Content\">\n        <div className=\"Title\">Air Quality Survey</div>\n        <div className=\"Main\">\n          <div\n            className=\"Question\"\n            style={{ marginTop: step > 5 ? -40 : 0 }}\n          >\n            {titles[step]}\n          </div>\n          {content[step] || 'None'}\n        </div>\n        <div className=\"Navigation\">\n          {step === 0 ? (\n            <button\n              href=\"#\"\n              className=\"ActionButton\"\n              onClick={() => setStep(1)}\n            >\n              Start\n            </button>\n          ) : step === 4 ? (\n            <React.Fragment>\n              <div />\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => setStep(10)}\n              >\n                Start Over\n              </button>\n            </React.Fragment>\n          ) : step === 9 ? (\n            <React.Fragment>\n              <div className=\"RightAlignButton\">\n                <button\n                  href=\"#\"\n                  className=\"SmallActionButton\"\n                  onClick={() => setStep(7)}\n                >\n                  Previous\n                </button>\n              </div>\n            </React.Fragment>\n          ) : step === 10 ? (\n            <React.Fragment>\n              <button\n                href=\"#\"\n                className=\"SmallActionUnderline\"\n                onClick={() => reset(true)}\n              >\n                Submit\n              </button>\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => reset()}\n              >\n                Skip\n              </button>\n            </React.Fragment>\n          ) : step >= 5 ? (\n            <React.Fragment>\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => setStep(step === 5 ? 4 : 5)}\n              >\n                Previous\n              </button>\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => setStep(10)}\n              >\n                Start Over\n              </button>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => setStep(step - 1)}\n              >\n                Previous\n              </button>\n              <button\n                href=\"#\"\n                className=\"SmallActionButton\"\n                onClick={() => {\n                  setStep(step + 1);\n                }}\n                disabled={disabled[step]}\n              >\n                Next\n              </button>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}